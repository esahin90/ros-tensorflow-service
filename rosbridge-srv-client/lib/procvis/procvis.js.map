{"version":3,"sources":["webpack:///webpack/bootstrap c6702d027fdf5250372a","webpack:///./src/toolbar/Tool.js","webpack:///./src/graph/Connector.js","webpack:///./src/graph/Node.js","webpack:///./src/graph/Edge.js","webpack:///./src/graph/Graph.js","webpack:///./src/process/PreviewTask.js","webpack:///./src/process/Task.js","webpack:///./src/graph/index.js","webpack:///./src/importer/index.js","webpack:///./src/process/index.js","webpack:///./src/toolbar/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/importer/BPMNImport.js","webpack:///./src/index.js","webpack:///./src/process/Event.js","webpack:///./src/toolbar/AddTask.js","webpack:///./src/toolbar/AutoLayout.js","webpack:///./src/toolbar/Hand.js","webpack:///./src/toolbar/Toolbar.js"],"names":["Tool","toolbar","toggleTool","createDOM","addTool","domElement","document","createElement","classList","add","link","onclick","event","selected","select","appendChild","value","remove","_selected","Connector","node","options","edges","direction","connector","other","Error","edge","Edge","graph","rect","getBoundingClientRect","x","left","offsetWidth","y","top","offsetHeight","Node","label","id","connectors","addNode","_dragStart","position","outputNodes","forEach","dragStart","dragEnd","dist","setPosition","dragChild","nodes","thisNode","push","redrawEdges","style","webkitTransform","transform","setAttribute","getEdges","layout","removeChild","content","addDragAndDrop","dragMove","target","parseFloat","getAttribute","dx","dy","autoLayout","draggable","interact","on","getConnectedNodes","width","height","start","end","addEdge","path","createElementNS","svg","namespaceURI","setAttributeNS","a","b","diff","createPath","Graph","elementId","rankdir","multigraph","getElementById","events","preview","recreate","_autoLayout","dagre","graphlib","setGraph","layoutApplied","self","name","setNode","setEdge","defs","txt","innerHTML","removeNode","nodeIds","nodeId","dagreNode","PreviewTask","Task","createConnector","state","input","output","con","connect","default","BPMNImport","global","procvis","exports","Event","AddTask","img","src","removeDOM","addPreview","pageX","pageY","newConnection","elem","newTask","removeConnections","elementFromPoint","removePreview","AutoLayout","Hand","Toolbar","tools","tool","item","length"],"mappings":"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","file":"procvis.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c6702d027fdf5250372a","export default class Tool {\n  constructor(toolbar) {\n    this.toggleTool = false;\n    this.toolbar = toolbar;\n    this.createDOM();\n    toolbar.addTool(this);\n  }\n\n  createDOM() {\n    this.domElement = document.createElement('div');\n    this.domElement.classList.add('tool');\n    this.link = document.createElement('a');\n    this.link.onclick = (event) => {\n      if (this.toggleTool) {\n        this.selected = !this.selected;\n      } else {\n        this.toolbar.select(this);\n      }\n    };\n    this.domElement.appendChild(this.link);\n  }\n\n  /**\n   * when a tool is selected its action will be applied when the\n   * user touches the graph area.\n   */\n  set selected(value) {\n    if (value) {\n      this.domElement.classList.add('selected');\n    } else {\n      this.domElement.classList.remove('selected');\n    }\n    this._selected = value;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/toolbar/Tool.js","import Edge from './Edge';\n\n/**\n * a Connector is the output(start) or input(end) point of an edge.\n * it is located somewhere on the Node, normally on its border.\n * visualized as a circle or rectangle\n */\n\nexport default class Connector {\n  constructor(node, options) {\n    this.node = node; // Node\n    this.edges = [];\n\n    // input, output or both\n    this.direction = options.direction || 'output';\n    this.createDOM();\n  }\n\n  createDOM() {\n    this.domElement = document.createElement('div');\n    this.domElement.connector = this; // makes it easier for drag-and-drop\n    this.domElement.classList.add('connector');\n    this.domElement.classList.add(this.direction);\n    this.node.domElement.appendChild(this.domElement);\n  }\n\n  get position() {\n    let rect = this.domElement.getBoundingClientRect()\n    return {\n      x: rect.left + this.domElement.offsetWidth / 2,\n      y: rect.top + this.domElement.offsetHeight / 2\n    }\n  }\n\n  /**\n   * connect one connector with another one\n   */\n  connect(other) {\n    if (this.direction === 'input') {\n      throw new Error(\"this connector is set as input, start connecting from an output\");\n    }\n    let edge = new Edge(this.node.graph, this, other);\n    return edge;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/graph/Connector.js","import Graph from './Graph';\n\nexport default class Node {\n  constructor(graph, label, options) {\n    this.graph = graph;\n    // we just count our nodes, a new node gets a new id,\n    // alternatively you can set the id from a database-id generated\n    // by the server.\n\n    Node.id = ++Node.id || 0;\n    // using options we can overwrite the id\n    this.id = options && options.id ? options.id : 'node_' + Node.id;\n\n    this.options = options;\n\n    this.label = label || 'Node ' + Node.id;\n\n    this.connectors = [];\n\n    this.createDOM();\n\n    graph.addNode(this);\n  }\n\n  dragStart() {\n    this._dragStart = this.position;\n    this.outputNodes.forEach((node) => {\n      node.dragStart();\n    })\n  }\n\n  dragEnd() {\n    this._dragStart = null;\n    this.outputNodes.forEach((node) => {\n        node.dragEnd();\n    });\n  }\n\n  dragMove(x, y) {\n    let dist = [x - this._dragStart[0], y - this._dragStart[1]];\n    this.setPosition(x, y);\n    this.dragChild(dist);\n  }\n\n  dragChild(dist) {\n    this.outputNodes.forEach((node) => {\n      node.setPosition(\n        node._dragStart[0] + dist[0],\n        node._dragStart[1] + dist[1],\n        false);\n      node.dragChild(dist);\n    })\n  }\n\n  getConnectedNodes(direction) {\n    let nodes = [];\n    let thisNode = this;\n    this.connectors.forEach((connector) => {\n      if (connector.direction == direction) {\n        connector.edges.forEach((edge) => {\n          let node = edge[direction].node;\n          if (node != thisNode)\n            nodes.push(node);\n        })\n      }\n    });\n    return nodes;\n  }\n\n  get outputNodes() {\n    return this.getConnectedNodes(\"output\");\n  }\n\n  get inputNodes() {\n    return this.getConnectedNodes(\"input\");\n  }\n\n  setPosition(x, y, redrawEdges) {\n    // save position to calculate distance of movement\n    this.position = [x, y];\n\n    this.domElement.style.webkitTransform =\n    this.domElement.style.transform =\n      'translate(' + x + 'px, ' + y + 'px)';\n    // update the posiion attributes\n    this.domElement.setAttribute('data-x', x);\n    this.domElement.setAttribute('data-y', y);\n\n    // TODO: for performance optimization just move all edges,\n    // do NOT redraw them when redrawEdges is false!\n    //if (redrawEdges === undefined || redrawEdges === true) {\n      this.getEdges().forEach((edge) => {\n        edge.layout();\n      });\n    //}\n  }\n\n  getEdges() {\n    let edges = []\n    this.connectors.forEach((connector) => {\n      connector.edges.forEach((edge) => {\n        edges.push(edge);\n      })\n    });\n    return edges;\n  }\n\n  get width() {\n    return this.domElement.getBoundingClientRect().width + 20;\n  }\n\n  get height() {\n    return this.domElement.getBoundingClientRect().height;\n  }\n\n  removeDOM() {\n    this.graph.domElement.removeChild(this.domElement);\n    this.domElement = null;\n  }\n\n  /**\n   * create div that will be the visual representation for our node\n   * and add it to the document body\n   */\n  createDOM() {\n    // outer element hosts the node itself, css background colors,\n    // border etc. will be applied here.\n    this.domElement = document.createElement('div');\n    this.domElement.node = this;\n    this.domElement.classList.add('node');\n    this.graph.domElement.appendChild(this.domElement);\n\n    // content element has the title for the node and maybe some more UI\n    // it is centered in the node in css.\n    this.content = document.createElement('div');\n    this.content.classList.add('node_content');\n    this.domElement.appendChild(this.content);\n    this.addDragAndDrop();\n  }\n\n  addDragAndDrop() {\n    let graph = this.graph;\n    function dragMove (event) {\n      // translate the element\n      event.target.node.dragMove(\n        (parseFloat(event.target.getAttribute('data-x')) || 0) + event.dx,\n        (parseFloat(event.target.getAttribute('data-y')) || 0) + event.dy\n      );\n    }\n    function dragStart(event) {\n      event.target.node.dragStart();\n    }\n    function dragEnd(event) {\n      // snap back to inital position if nothing changes,\n      // dagre does the layout, not the user\n      if (graph.autoLayout) {\n        graph.layout();\n      }\n      event.target.node.dragEnd();\n    }\n    let draggable = interact(this.domElement).draggable({});\n    draggable.on('dragmove', dragMove)\n    draggable.on('dragstart', dragStart);\n    draggable.on('dragend', dragEnd)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/graph/Node.js","/**\n * The edge is a line between two Connectors\n */\n\nexport default class Edge {\n  constructor(graph, start, end, options) {\n    this.start = start; //Connector\n    this.start.edges.push(this);\n\n    this.end = end; //Connector\n    this.end.edges.push(this);\n\n    this.graph = graph;\n    graph.addEdge(this);\n\n    this.createDOM();\n  }\n\n  get output(){\n    return this.end;\n  }\n\n  get input() {\n    return this.start;\n  }\n\n  createDOM() {\n    this.path = document.createElementNS(this.graph.svg.namespaceURI, 'path');\n    this.path.setAttributeNS(null, 'class', 'edge');\n    this.path.setAttributeNS(null, 'fill', 'none');\n    this.path.edge = this; // makes it easier for drag-and-drop\n    this.graph.svg.appendChild(this.path);\n  }\n\n  createPath() {\n    let a = this.start.position;\n    let b = this.end.position;\n\n    let diff = {\n      x: b.x - a.x,\n      y: b.y - a.y\n    };\n\n    var path = 'M' + a.x + ',' + a.y + ' ';\n    path += 'C';\n    path += a.x + diff.x / 3 * 2 + ',' + a.y + ' ';\n    path += a.x + diff.x / 3 + ',' + b.y + ' ';\n    path += b.x + ',' + b.y;\n\n    return path;\n  };\n\n  /**\n   * redraw path\n   */\n  layout() {\n    let path = this.createPath();\n    this.path.setAttributeNS(null, 'd', path);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/graph/Edge.js","export default class Graph {\n  constructor(elementId, options) {\n    if (!options) {\n      this.options = {rankdir: 'LR', multigraph: true};\n    } else {\n      this.options = options;\n    }\n    this.domElement = document.getElementById(elementId);\n    this.createDOM();\n    this.nodes = {};\n    this.events = {};\n    this.preview = null;\n\n    this.recreate();\n\n    this._autoLayout = this.options.autoLayout || true;\n  }\n\n  get autoLayout() {\n    return this._autoLayout;\n  }\n\n  set autoLayout(value) {\n    this._autoLayout = value;\n    if (value) {\n      this.layout();\n    }\n  }\n\n /**\n  * recreate dagre nodes\n  */\n  recreate() {\n    this.dagre = new dagre.graphlib.Graph();\n    this.dagre.setGraph(this.options);\n    this.layoutApplied = false;\n    let self = this;\n    for (var name in this.nodes) {\n      let node = this.nodes[name];\n      this.dagre.setNode(node.id, {\n        label: node.label,\n        width: node.width,\n        height: node.height\n      });\n      node.connectors.forEach((connector) => {\n        if (connector.direction == 'output') {\n          connector.edges.forEach((edge) => {\n            self.addEdge(edge);\n          });\n        }\n      });\n    }\n  }\n\n  addEdge(edge) {\n    this.dagre.setEdge(\n      edge.start.node.id,\n      edge.end.node.id,\n      {}\n    );\n  }\n\n  /**\n   * create required DOM elements (like SVG)\n   */\n  createDOM() {\n    this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    this.domElement.appendChild(this.svg);\n    this.defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n    this.svg.appendChild(this.defs);\n    let txt = '<marker orient=\"auto\" refY=\"0.0\" refX=\"0.0\" id=\"Arrow2Lend\"style=\"overflow:visible;\">';\n    txt += '<path id=\"Arrow2LendPath\" style=\"fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;\" d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \" transform=\"scale(.5) rotate(180) translate(5,0)\" />';\n    txt += '</marker>';\n    this.defs.innerHTML = txt;\n  }\n\n  /**\n   * create node from dagre\n   */\n  addNode(node) {\n    this.nodes[node.id] = node;\n    this.dagre.setNode(node.id, {\n      label: node.label,\n      width: node.width,\n      height: node.height\n    });\n  }\n\n  removeNode(node) {\n    this.dagre.removeNode(node.id);\n    delete this.nodes[node.id];\n  }\n\n  layout() {\n    dagre.layout(this.dagre);\n    let nodeIds = this.dagre.nodes();\n    let self = this;\n    let edges = [];\n\n    // position nodes\n    nodeIds.forEach((nodeId) => {\n      let dagreNode = self.dagre.node(nodeId);\n      let node = self.nodes[nodeId];\n      // TODO: animation\n      node.setPosition(dagreNode.x, dagreNode.y);\n    });\n\n    this.layoutApplied = true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/graph/Graph.js","import Task from './Task';\n\nexport default class PreviewTask extends Task {\n  constructor(graph, label, options) {\n    super(graph, label, options);\n  }\n\n  createDOM() {\n    super.createDOM();\n    this.domElement.classList.add('preview');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/process/PreviewTask.js","import Connector from '../graph/Connector';\nimport Node from '../graph/Node';\n\n/**\n * the default task has two connectors on the left and right to show\n * the previous and next task as well as a connector for notes\n */\nexport default class Task extends Node {\n  constructor(graph, label, options) {\n    super(graph, label, options);\n    this.createConnector();\n  }\n\n  createDOM() {\n    super.createDOM();\n    let domElement = this.domElement;\n    domElement.classList.add('task');\n    if (this.options && this.options.state) {\n      domElement.classList.add(this.options.state);\n    }\n    this.content.innerHTML = this.label;\n  }\n\n\n  /**\n   * create 2 default connectors, one to the left and one to the right\n   */\n  createConnector() {\n    this.input = new Connector(this, {direction: 'input'});\n    this.output = new Connector(this, {direction: 'output'});\n    this.connectors = [this.input, this.output];\n  }\n\n  /**\n   * connect with another Task, so this node creates an edge with\n   * this node as output and an input for the other node\n   * the order is important: this node --> other node\n   */\n  connect(other) {\n    let con = other.connectors[0]\n    let edge = this.output.connect(con);\n    return edge;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/process/Task.js","export { default as Node } from './Node';\nexport { default as Edge } from './Edge';\nexport { default as Connector } from './Connector';\nexport { default as Graph } from './Graph';\n\n\n\n// WEBPACK FOOTER //\n// ./src/graph/index.js","export { default as BPMNImport } from './BPMNImport';\n\n\n\n// WEBPACK FOOTER //\n// ./src/importer/index.js","export { default as Task } from './Task';\nexport { default as PreviewTask } from './PreviewTask';\nexport { default as Event } from './Event';\n\n\n\n// WEBPACK FOOTER //\n// ./src/process/index.js","export { default as Tool } from './Tool';\nexport { default as AutoLayout } from './AutoLayout';\nexport { default as AddTask } from './AddTask';\nexport { default as Hand } from './Hand';\nexport { default as Toolbar } from './Toolbar';\n\n\n\n// WEBPACK FOOTER //\n// ./src/toolbar/index.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 11\n// module chunks = 0","export default class BPMNImport {\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/importer/BPMNImport.js","export * from './toolbar';\nexport * from './graph';\nexport * from './process';\nexport * from './importer';\n\nglobal.procvis = exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Connector from '../graph/Connector';\nimport Node from '../graph/Node';\n\n/**\n * start intermediate or end\n * all events are start events for now...\n */\n export default class Event extends Node {\n   constructor(graph, label, options) {\n     super(graph, label, options);\n     this.createConnector();\n  }\n\n  createDOM() {\n    super.createDOM();\n    this.domElement.classList.add('event');\n    this.domElement.classList.add(this.label);\n  }\n\n  createConnector() {\n    this.con = new Connector(this, {direction: 'output'});\n    this.connectors = [this.con];\n  }\n\n  connect(other) {\n    let edge = this.con.connect(other.input);\n    return edge;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/process/Event.js","/**\n * tool to add a new task\n */\nimport Tool from './Tool';\nimport PreviewTask from '../process/PreviewTask';\n\nexport default class AddTask extends Tool {\n  constructor(toolbar) {\n    super(toolbar);\n  }\n\n  createDOM() {\n    super.createDOM();\n    this.img = document.createElement('img');\n    this.img.src = \"img/task.png\";\n    this.link.appendChild(this.img);\n    this.domElement.classList.add('add_node');\n    this.addDragAndDrop();\n  }\n\n  set selected(value) {\n    /*if (value && !this._selected) {\n      this.addPreview();\n    } else {\n      this.removePreview();\n    }\n    */\n    super.selected = value;\n  }\n\n  removePreview() {\n    if (!this.preview) {\n      return;\n    }\n    this.preview.removeDOM();\n    this.toolbar.graph.preview = null;\n    this.toolbar.graph.removeNode(this.preview);\n    this.preview = null;\n  }\n\n  /*\n   * start edit mode and create preview task\n   */\n  addPreview() {\n    this.preview = new PreviewTask(this.toolbar.graph, \"New Task\");\n    this.toolbar.graph.addNode(this.preview);\n  }\n\n\n  addDragAndDrop() {\n    let graph = this.toolbar.graph;\n    let self = this;\n    function dragMove (event) {\n      // translate the element\n      let preview = self.preview;\n      preview.dragMove(\n        (parseFloat(preview.domElement.getAttribute('data-x')) || 0) + event.dx,\n        (parseFloat(preview.domElement.getAttribute('data-y')) || 0) + event.dy\n      );\n\n    }\n    function dragStart(event) {\n      self.addPreview();\n      self.preview.setPosition(event.pageX + 2, event.pageY + 2);\n      self.preview._dragStart = self.preview.position;\n    }\n    // add a new connection at the connector\n    function newConnection(elem) {\n\n      if (elem.connector && elem.connector.direction == 'input') {\n        let start = elem.connector;\n        let newTask = new Task(graph);\n\n        // connect old inputs with input of this node\n        let removeConnections = [];\n        start.edges.forEach((edge) => {\n          // all edge.ends have to point to the input of the new node\n          edge.end = newTask.input;\n          newTask.input.edges.push(edge);\n        });\n        start.edges = [];\n\n        newTask.connect(elem.connector.node);\n        graph.recreate();\n      }\n      if (elem.connector && elem.connector.direction == 'output') {\n        let end = elem.connector;\n        let newTask = new Task(graph);\n\n        // connect old inputs with input of this node\n        let removeConnections = [];\n        end.edges.forEach((edge) => {\n          // all edge.ends have to point to the input of the new node\n          edge.start = newTask.output;\n          newTask.output.edges.push(edge);\n        });\n        end.edges = [];\n\n        elem.connector.node.connect(newTask);\n        graph.recreate();\n      }\n      if (elem.edge) {\n        debugger;\n      }\n    }\n    function dragEnd(event) {\n      // snap back to inital position if nothing changes,\n      // dagre does the layout, not the user\n      let elem = document.elementFromPoint(event.pageX, event.pageY)\n      if (elem) {\n\n        newConnection(elem)\n\n        self.removePreview();\n        if (graph.autoLayout) {\n          graph.layout();\n        }\n      }\n    }\n    let draggable = interact(this.domElement).draggable({});\n    draggable.on('dragmove', dragMove)\n    draggable.on('dragstart', dragStart);\n    draggable.on('dragend', dragEnd)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/toolbar/AddTask.js","import Tool from './Tool';\n\nexport default class AutoLayout extends Tool {\n  constructor(toolbar) {\n    super(toolbar);\n    this.toggleTool = true;\n    super.selected = true;\n  }\n\n  createDOM() {\n    super.createDOM();\n    this.img = document.createElement('img');\n    this.img.src = \"img/auto_layout.png\";\n    this.link.appendChild(this.img);\n  }\n\n  set selected (value) {\n    // we ignore the value - just call layout and be done with it\n    this._selected = !this._selected\n    this.toolbar.graph.autoLayout = this._selected;\n    super.selected = this._selected;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/toolbar/AutoLayout.js","import Tool from './Tool';\n\nexport default class Hand extends Tool {\n  constructor(toolbar) {\n    super(toolbar);\n  }\n\n  createDOM() {\n    super.createDOM();\n    this.img = document.createElement('img');\n    this.img.src = \"img/hand.png\";\n    this.link.appendChild(this.img);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/toolbar/Hand.js","export default class Toolbar {\n  constructor(graph) {\n    this.graph = graph;\n    this.tools = [];\n    this.createDOM();\n  }\n\n  createDOM() {\n    // this dom element will host all tool-icons\n    this.domElement = document.createElement('div');\n    this.domElement.classList.add('toolbar');\n    this.domElement.classList.add('one-column');\n    this.graph.domElement.appendChild(this.domElement);\n  }\n\n  select(tool) {\n    this.tools.forEach((item) => {\n      if (!item.toggleTool) {\n        item.selected = item == tool;\n      }\n    })\n  }\n\n  addTool(tool) {\n    this.domElement.appendChild(tool.domElement);\n    // automatically select first tool\n    if (!tool.toggleTool) {\n      tool.selected = this.tools.length == 0;\n    }\n    this.tools.push(tool);\n\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/toolbar/Toolbar.js"],"sourceRoot":""}